# AHA-GUI Score Config File

# Lines starting with # or // will be ignored
# Format is 4 quoted comma separated values ex:
# "eq","ASLR","TRUE","10" 
# The first field, which is new, tells us how to look: "eq" means equals, it will look for that exact value (case insensitive); "ct" means contains, it will do a case insensitive .contains for string matching
# Second field will tell us to look for ASLR (case insensitive), and if the value is TRUE (case insensitive) then add the points column to the score
# Third column is the value we're looking for i.e. "TRUE". This column can also have a set of values (only this column) such as "user1|user2|user3" that will all use the same score value
#     NOTE: scoring evaluation of multi criteria is stateless, so if you do "ct" and then put in vague values like "a|ab|ba" and the score input is "a" it will match all 3 and give 3x points!
# Fourth column points column is parsed as is, as an integer. Negative values will still be added (i.e. -10 would be added to the score, reducing the score)
# Valid range of the points column is -100 to 100 inclusive.
# The last column is not currently parsed, but should be used for comments which a future version of the GUI might display


"eq","aslr","true","10","Multiplatform check for ASLR"
"eq","dep","true","10","Multiplatform check for DEP"
"eq","authenticode","true","10","Windows check for signed code"
"eq","strongnaming","true","10","Windows check for strongnaming"
"eq","arch","amd64","10","Multiplatform check for binary ISA / process cpu architecture"
"eq","ControlFlowGuard","true","30","Windows check for ControlFlowGuard"
"eq","HighentropyVA","true","10","Windows check for HighEntropyVA"
"eq","username","NT AUTHORITY\LOCAL SERVICE","10","Windows check for a good user account"
"eq","username","NT AUTHORITY\SYSTEM","-50","Windows check for for a bad user account"
"eq","relro","true","10","Linux Full RELRO","Linux specific check for FULL RELRO"
"eq","relro","partial","5","Linux Partial RELRO","Linux specific check for PARTIAL RELRO"
"eq","stackcanary","true","10","Linux stack canary","Linux specific check for stack canary"
"ct","Privileges","SYSTEM","-50","Windows specific check for privs that elevate to system level"
# SeDebugPrivilege|SeTakeOwnershipPrivilege|SeTcbPrivilege|SeLoadDriverPrivilege
"ct","Privileges","SeDebugPrivilege","-10","Windows specific check for privs that elevate to system level"
"ct","Privileges","SeTakeOwnershipPrivilege","-10","Windows specific check for privs that elevate to system level"
"ct","Privileges","SeTcbPrivilege","-10","Windows specific check for privs that elevate to system level"
"ct","Privileges","SeLoadDriverPrivilege","-10","Windows specific check for privs that elevate to system level"
# SeAuditPrivilege|SeImpersonatePrivilege|SeBackupPrivilege
"ct","Privileges","SeAuditPrivilege","-5","Windows specific check for privs that elevate to system level"
"ct","Privileges","SeImpersonatePrivilege","-5","Windows specific check for privs that elevate to system level"
"ct","Privileges","SeBackupPrivilege","-5","Windows specific check for privs that elevate to system level"