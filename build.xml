<?xml version="1.0" encoding="UTF-8"?>

<project name="AHA-GUI" default="all" basedir=".">

	<property environment="env"/>
	<property name="build.numThreads" value="1" />
	<property name="src.dir" value="./src"/>
	<property name="lib.dir" value="./deps/org.graphstream/lib"/>
	<property name="build.version" value="AHA-GUI v0.6.5b1"/>
	<property name="CP" value="."/>
	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm" />
	</tstamp>
	<property name="build.timestamp" value="Built: ${TODAY}" />
	

	<!-- Temporary build directories -->
	<property name="build.dir" value="build"/>
	<property name="build.classes" value="${build.dir}/classes"/>
	<property name="java.source" value="${ant.java.version}"/> <!-- this removes the final warning on newer JDKs about bootclasspath not being set, but means that jars built on newer releases wont necessarily be backwards compatible-->
	<property name="java.target" value="${ant.java.version}"/>
	<property name="javadoc.additionalparam" value="-breakiterator"/>
	<property name="compile.optimize" value="true"/>
	<property name="compile.warnings" value="true"/>

	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>

	<!--  prepare target. -->
	<!-- Target to create the build directories prior to the -->
	<target name="prepare">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<tstamp/>
		<echo message="${build.version} ${build.timestamp}"/>
		<echo message="Building on Java: ${ant.java.version} Version: ${java.version}"/> 
	</target>
	<!--  /prepare target. -->

	<!-- compile target. -->
	<target name="compile" depends="prepare" description="Compiles all source code.">
		<javac srcdir="${src.dir}"
			destdir="${build.classes}"
			debug="on"
			source="${java.source}"
			target="${java.target}"
			deprecation="on" 
			optimize="on"
			includeantruntime="false">
		   <compilerarg value="-Xlint:-serial"/> <!-- Use xlint without the serialization checks since we do not do any class serialization at this time-->
		<classpath>  
        		<fileset dir="${lib.dir}">  
            			<include name="**/*.jar" />  
        		</fileset>  
       			</classpath> 
		</javac>
		<echo message="Finished Compiling."/>
	</target>
	<!-- /compile target. -->

	<target name="all" depends="compile" description="Generates .jars.">
		<parallel threadsPerProcessor="${build.numThreads}">
			<jar jarfile="${build.dir}/AHA-GUI.jar" basedir="${build.classes}" index="false" level="9" >
				<manifest>
					<attribute name="Class-Path" value="${CP} lib/gs-algo-1.3.jar lib/gs-core-1.3.jar lib/gs-ui-1.3.jar"/>
					<attribute name="Application-Name" value="AHA-GUI"/>
					<attribute name="Implementation-Version" value="${build.version} ${build.timestamp}" />
					<attribute name="Main-Class" value="esic/AHAGUI"/>
					<attribute name="SplashScreen-Image" value="images/splash.png"/>
				</manifest>
				<fileset dir="${src.dir}">
			        <include name="images/splash.png"/>
			    </fileset>
			</jar>
			<copy todir="${build.dir}/lib">
				<fileset dir="${lib.dir}"/>
			</copy>
			<copy todir="${build.dir}/lib">
				<fileset dir="./deps/org.graphstream/">
					<include name="*"/>
					<type type="file"/>
				</fileset>
			</copy>
			<copy file="LICENSE" tofile="${build.dir}/LICENSE"/>
			<copy file="MetricsTable.cfg" tofile="${build.dir}/MetricsTable.cfg"/>
		</parallel>
	</target>
	
	<!-- Delete classfiles built during previous builds.  Leave directories -->
	<target name="clean" description="Removes classes and jars built previously." >
			<delete>
				<fileset dir="${build.classes}" includes="**/*"/>
			</delete>
			<delete>
				<fileset dir="${build.dir}" includes="*.jar"/>
			</delete>
	</target>
</project>
